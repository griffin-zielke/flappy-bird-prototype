// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex`640008000003030404040404030303030103030303030103030303030103030303030103040300030301030303000301000303030303030303030301030303030301030303030301030300030301030303030301030304040301030303030301030303030301020203030300030003030003030401030003030301030300030304030300030301030404030303010003030303010304030003030300030303000303030003010300030303010303030303030003030003010300030403010303000303010300030403010202030303030303000303030304030303030303010304040404040403030303030303040303030103030303030303040404040304030303030303040403030103030303030103030303030303030303030103030304040103040303030103030304040302020303000303030303030303040403030003030103030304040304040404040303000404000301030300030303030300040401040403030303030304030301030303030300030300030300030300030300030303040301030404040404030303030404020200030003030003030300030303030303030300030300040401030300030403030303030303030303030304030303030403010304040403010300040403000303000303030303030304010303030303030303030403000303030303040403030003040202030303030303030404040303010303030303030303040404010303030303010303030303030404040404030103000404030100030303030303030304040303040303030003030304040103030304030303000304030303030300030303030303040402020303030403030304030303030103030303030303040303030103030303030103030300030303030303030001030303030301030303030303030300030404030404030301030300040401030003040401030303040303000303030301030303030301020203000303030300030300030301030300030301030303000301030003030301030303030303010300030303010303030300010303000303010303030303010303030303010303030304010303030304010303030403010303030300010303000303010202`, img`
............2.....2.....2.....2......2.....2...........2.....2.....2.....2.....2.....2.....2.....2.2
............2.....2...........2......2.....2.................2.....2...........2.....2.....2.....2.2
..................2..................2.......................2.....2...........2.....2.....2.......2
..................2..................2...........2...........2.......................2.............2
........................2........................2.....2.................2.........................2
............2...........2.....2............2.....2.......................2.........................2
............2...........2.....2............2.....2.................2.....2.....2...........2.....2.2
............2.....2.....2.....2......2.....2.....2.....2.....2.....2.....2.....2.....2.....2.....2.2
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile3,myTiles.tile2,myTiles.tile4], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile1":return tile1;
            case "myTile1":
            case "tile3":return tile3;
            case "myTile0":
            case "tile2":return tile2;
            case "myTile2":
            case "tile4":return tile4;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
